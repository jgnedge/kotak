{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "KotakADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/stag2landing_LOS_HL_LP_RH')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "stag2landing_LOS_HL_LP_RH",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CHECK_BLOB_PARTITION_EXISTS_DELETE_AND_RECREATE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SybaseSource",
								"query": "select DISTINCT * into #aa from (\nselect  T1.SZLOANAPPLNNO as LOAN_NUMBER,T1.SZRM AS RM_CODE,T2.SZREFERENCENO AS PARTY_ID,T1.FTOTLOANAMT AS OFFER_LOAN_AMOUNT,\nT4.FAGREEMENTVALUE AS AGREEMENTVALUE,T5.FSANCTION_LTV_1 AS LTV1,T5.FSANCTION_LTV_2 as LTV2,T2.CINDCOMP AS INDIVIDUAL_ORGANISATION,\nT2.SZFNAME AS FIRST_NAME,T2.SZMNAME AS MIDDLE_NAME,T2.SZLNAME as LAST_NAME,T2.SZPARTYTYPE AS PARTY_TYPE,\nT1.ETL_LAST_UPDATED_TIME AS LOAN_NUMBER_ETL_LAST_UPDATED_TIME,\nT1.ETL_LAST_UPDATED_TIME AS RM_CODE_ETL_LAST_UPDATED_TIME,\nT2.ETL_LAST_UPDATED_TIME AS PARTY_ID_ETL_LAST_UPDATED_TIME,\nT1.ETL_LAST_UPDATED_TIME AS OFFER_LOAN_AMOUNT_ETL_LAST_UPDATED_TIME,\nT4.ETL_LAST_UPDATED_TIME AS AGREEMENTVALUE_ETL_LAST_UPDATED_TIME,\nT5.ETL_LAST_UPDATED_TIME AS LTV1_ETL_LAST_UPDATED_TIME,\nT5.ETL_LAST_UPDATED_TIME AS LTV2_ETL_LAST_UPDATED_TIME,\nT2.ETL_LAST_UPDATED_TIME AS INDIVIDUAL_ORGANISATION_ETL_LAST_UPDATED_TIME,\nT2.ETL_LAST_UPDATED_TIME AS FIRST_NAME_ETL_LAST_UPDATED_TIME,   \nT2.ETL_LAST_UPDATED_TIME AS MIDDLE_NAME_ETL_LAST_UPDATED_TIME,\nT2.ETL_LAST_UPDATED_TIME AS LAST_NAME_ETL_LAST_UPDATED_TIME,\nT2.ETL_LAST_UPDATED_TIME AS PARTY_TYPE_ETL_LAST_UPDATED_TIME\nfrom STG.STG_LOS_TR_LOANAPPLICATIONDETAILS T1\nLEFT JOIN STG.STG_LOS_TR_APPLICATIONWORKDETAILS T2 ON T1.SZLOANAPPLNNO=T2.SZLOANAPPLNNO\nLEFT JOIN STG.STG_BCIF_PARTY_FINANCIALS T3 ON T2.SZREFERENCENO=T3.PARTY_ID\nLEFT JOIN STG.STG_LOS_TR_REQUEST T4 ON T1.SZLOANAPPLNNO=T4.SZLOANAPPLNNO\nLEFT JOIN STG.STG_LOS_TR_CASE_BOUNDARIES T5 ON T1.SZLOANAPPLNNO=T5.SZLOANAPPLNNO \nwhere (PARTY_ID is not null or PARTY_ID!='')  and (AGREEMENTVALUE is not null or AGREEMENTVALUE is null) and RM_CODE!='' and \nT1.ETL_CHANGE_FLAG <> 'D' and T2.ETL_CHANGE_FLAG <> 'D' and T3.ETL_CHANGE_FLAG <> 'D' and T4.ETL_CHANGE_FLAG <> 'D' and\nT5.ETL_CHANGE_FLAG <> 'D' and T2.SZPARTYTYPE in ('BORROWER','COBORROWER','GUARANTOR','SRL') \n-- and T1.SZLOANAPPLNNO in ('HL13259748','HL14182065','HL14913975','LP13936765','LP13946292','LP14202962','LP14636325','LP14711787','LP14887084','LP14903883','RH13750133')\n)a\n\n--NETWORTH\nselect * into #bb from (\nselect T1.*,T2.FVALUE AS NETWORTH,T2.ETL_LAST_UPDATED_TIME AS NETWORTH_ETL_LAST_UPDATED_TIME \nfrom #aa T1 LEFT JOIN STG.STG_LOS_TR_ELG_APPLICANTINCOMEHEADER T2 ON T1.LOAN_NUMBER=T2.SZLOANAPPLNNO\nand T2.SZINCOMEHEADCODE in ('HLL38'))a\n\n--DEBTORS\nselect * into #cc from (\nselect T1.*,T2.FVALUE AS DEBTORS,T2.ETL_LAST_UPDATED_TIME AS DEBTORS_ETL_LAST_UPDATED_TIME \nfrom #bb T1 LEFT JOIN STG.STG_LOS_TR_ELG_APPLICANTINCOMEHEADER T2 ON T1.LOAN_NUMBER=T2.SZLOANAPPLNNO\nand T2.SZINCOMEHEADCODE in ('U64'))a\n\n--CREDITORS\nselect * into #dd from (\nselect T1.*,T2.FVALUE AS CREDITORS,T2.ETL_LAST_UPDATED_TIME AS CREDITORS_ETL_LAST_UPDATED_TIME \nfrom #cc T1 LEFT JOIN STG.STG_LOS_TR_ELG_APPLICANTINCOMEHEADER T2 ON T1.LOAN_NUMBER=T2.SZLOANAPPLNNO\nand T2.SZINCOMEHEADCODE in ('U79'))a\n\n--LOANS_ADVANCES\nselect * into #ee from (\nselect T1.*,T2.FVALUE AS LOANS_ADVANCES,T2.ETL_LAST_UPDATED_TIME AS LOANS_ADVANCES_ETL_LAST_UPDATED_TIME \nfrom #dd T1 LEFT JOIN STG.STG_LOS_TR_ELG_APPLICANTINCOMEHEADER T2 ON T1.LOAN_NUMBER=T2.SZLOANAPPLNNO\nand T2.SZINCOMEHEADCODE in ('U67'))a\n\n--INVESTMENTS_DEPOSITS\nselect * into #ff from (\nselect T1.*,T2.FVALUE AS INVESTMENTS_DEPOSITS,T2.ETL_LAST_UPDATED_TIME AS INVESTMENTS_DEPOSITS_ETL_LAST_UPDATED_TIME from #ee T1 \nLEFT JOIN STG.STG_LOS_TR_ELG_APPLICANTINCOMEHEADER T2 ON T1.LOAN_NUMBER=T2.SZLOANAPPLNNO\nand T2.SZINCOMEHEADCODE in ('U55'))a\n\n--TOTAL_INCOME\nselect * into #gg from (\nselect T1.*,T2.FVALUE AS TOTAL_INCOME,T2.ETL_LAST_UPDATED_TIME AS TOTAL_INCOME_ETL_LAST_UPDATED_TIME \nfrom #ff T1 LEFT JOIN STG.STG_LOS_TR_ELG_APPLICANTINCOMEHEADER T2 ON T1.LOAN_NUMBER=T2.SZLOANAPPLNNO\nand T2.SZINCOMEHEADCODE in ('HLL13'))a\n\nselect distinct * from #gg\n"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"maxRowsPerFile": 300000,
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SybaseDataset_LOS_HL_LP_RH",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "csv_Derived_LOS_HL_LP_RH",
								"type": "DatasetReference",
								"parameters": {
									"date2run": {
										"value": "@pipeline().parameters.date2run",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "CHECK_BLOB_PARTITION_EXISTS_DELETE_AND_RECREATE",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Check_Blob_Load_date_wise_Delete_Activity_pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"date2run": {
									"value": "@pipeline().parameters.date2run",
									"type": "Expression"
								},
								"Blob_File_Path_Location": {
									"value": "@variables('Blob_File_Path_Location')",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"date2run": {
						"type": "string",
						"defaultValue": "yyyyMMdd"
					}
				},
				"variables": {
					"Blob_File_Path_Location": {
						"type": "String",
						"defaultValue": "DERIVED_DATASETS/LOS_HL_LP_RH/load_date="
					}
				},
				"folder": {
					"name": "stag2landing_deriveddatasets"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-11T12:58:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/stag2landing_LOS_WC_FINANCIAL_RATIOS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LOS_WC_FINANCIAL_RATIOS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CHECK_BLOB_PARTITION_EXISTS_DELETE_AND_RECREATE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SybaseSource",
								"query": "select DISTINCT * into #aa from (\nselect  T1.SZLOANAPPLNNO as LOAN_NUMBER,T1.SZRM AS RM_CODE,T2.SZREFERENCENO AS PARTY_ID,T1.FTOTLOANAMT AS OFFER_LOAN_AMOUNT,\nT5.FSANCTION_LTV_1 AS LTV1,T5.FSANCTION_LTV_2 as LTV2,T2.CINDCOMP AS INDIVIDUAL_ORGANISATION,\nT2.SZFNAME AS FIRST_NAME,T2.SZMNAME AS MIDDLE_NAME,T2.SZLNAME as LAST_NAME,T2.SZPARTYTYPE AS PARTY_TYPE,\nT1.ETL_LAST_UPDATED_TIME AS LOAN_NUMBER_ETL_LAST_UPDATED_TIME,\nT1.ETL_LAST_UPDATED_TIME AS RM_CODE_ETL_LAST_UPDATED_TIME,\nT2.ETL_LAST_UPDATED_TIME AS PARTY_ID_ETL_LAST_UPDATED_TIME,\nT1.ETL_LAST_UPDATED_TIME AS OFFER_LOAN_AMOUNT_ETL_LAST_UPDATED_TIME,\nT5.ETL_LAST_UPDATED_TIME AS LTV1_ETL_LAST_UPDATED_TIME,\nT5.ETL_LAST_UPDATED_TIME AS LTV2_ETL_LAST_UPDATED_TIME,\nT2.ETL_LAST_UPDATED_TIME AS INDIVIDUAL_ORGANISATION_ETL_LAST_UPDATED_TIME,\nT2.ETL_LAST_UPDATED_TIME AS FIRST_NAME_ETL_LAST_UPDATED_TIME,   \nT2.ETL_LAST_UPDATED_TIME AS MIDDLE_NAME_ETL_LAST_UPDATED_TIME,\nT2.ETL_LAST_UPDATED_TIME AS LAST_NAME_ETL_LAST_UPDATED_TIME,\nT2.ETL_LAST_UPDATED_TIME AS PARTY_TYPE_ETL_LAST_UPDATED_TIME\nfrom STG.STG_LOS_TR_LOANAPPLICATIONDETAILS T1\nLEFT JOIN STG.STG_LOS_TR_APPLICATIONWORKDETAILS T2 ON T1.SZLOANAPPLNNO=T2.SZLOANAPPLNNO\nLEFT JOIN STG.STG_BCIF_PARTY_FINANCIALS T3 ON T2.SZREFERENCENO=T3.PARTY_ID\nLEFT JOIN STG.STG_LOS_TR_CASE_BOUNDARIES T5 ON T1.SZLOANAPPLNNO=T5.SZLOANAPPLNNO \nwhere (PARTY_ID is not null or PARTY_ID!='')  and RM_CODE!='' and \nT1.ETL_CHANGE_FLAG <> 'D' and T2.ETL_CHANGE_FLAG <> 'D' and T3.ETL_CHANGE_FLAG <> 'D' and\nT5.ETL_CHANGE_FLAG <> 'D' and T2.SZPARTYTYPE in ('BORROWER','COBORROWER','GUARANTOR','SRL') \n--and T1.SZLOANAPPLNNO in ('WC15929316','WC15936687','WC15948129','WC15968269','WC15977358','WC15979176','WC15979539','WC15984498','WC15984692','WC16015542')\n)a\n\n\n--NETWORTH\nselect * into #bb from (\nselect T1.*,T2.FVALUE AS NETWORTH,T2.ETL_LAST_UPDATED_TIME AS NETWORTH_ETL_LAST_UPDATED_TIME \nfrom #aa T1 LEFT JOIN STG.STG_LOS_TR_ELG_APPLICANTINCOMEHEADER T2 ON T1.LOAN_NUMBER=T2.SZLOANAPPLNNO and T2.ETL_CHANGE_FLAG <> 'D'\nand T2.SZINCOMEHEADCODE in ('WC6A38','WCINS37'))a\n\n--TOTAL_INCOME\nselect * into #cc from (\nselect T1.*,T2.FVALUE AS TOTAL_INCOME,T2.ETL_LAST_UPDATED_TIME AS TOTAL_INCOME_ETL_LAST_UPDATED_TIME \nfrom #bb T1 LEFT JOIN STG.STG_LOS_TR_ELG_APPLICANTINCOMEHEADER T2 ON T1.LOAN_NUMBER=T2.SZLOANAPPLNNO and T2.ETL_CHANGE_FLAG <> 'D'\nand T2.SZINCOMEHEADCODE in ('WC6A13','WCINS12'))a\n\n\nselect DISTINCT * from #cc\n"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"maxRowsPerFile": 200000,
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SybaseDataset_LOS_WC_FINANCIAL_RATIOS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "csv_Derived_LOS_WC_FR",
								"type": "DatasetReference",
								"parameters": {
									"date2run": {
										"value": "@pipeline().parameters.date2run",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "CHECK_BLOB_PARTITION_EXISTS_DELETE_AND_RECREATE",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Check_Blob_Load_date_wise_Delete_Activity_pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"date2run": {
									"value": "@pipeline().parameters.date2run",
									"type": "Expression"
								},
								"Blob_File_Path_Location": {
									"value": "@variables('Blob_File_Path_Location')",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"date2run": {
						"type": "string",
						"defaultValue": "yyyyMMdd"
					}
				},
				"variables": {
					"Blob_File_Path_Location": {
						"type": "String",
						"defaultValue": "DERIVED_DATASETS/LOS_WC_FINANCIAL_RATIOS/load_date="
					}
				},
				"folder": {
					"name": "stag2landing_deriveddatasets"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-14T10:05:07Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/stag2landing_NPA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CHECK_BLOB_LOAD_DATE_EXISTS_STG_IDB_VW_DIM_ACCTS",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Check_Blob_Load_date_wise_Delete_Activity_pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"date2run": {
									"value": "@replace(pipeline().parameters.partitionValue,'-','')",
									"type": "Expression"
								},
								"Blob_File_Path_Location": {
									"value": "@variables('Blob_File_Path_NPA_DATA')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "STG-STG_IDB_VW_DIM_ACCTS_ARCHIVE",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CHECK_BLOB_LOAD_DATE_EXISTS_STG_IDB_VW_DIM_ACCTS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SybaseSource",
								"query": {
									"value": "@concat('SELECT * FROM\nSTG.STG_IDB_VW_DIM_ACCTS_ARCHIVE\nWHERE\nDPD BETWEEN 6 AND 90\nAND DATEFORMAT(REPORT_DATE, ''yyyy-MM-dd'')  BETWEEN ''',  startOfMonth(subtractFromTime(pipeline().parameters.partitionValue, 1, 'MONTH'),'yyyy-MM-dd'),''' AND ''', subtractFromTime(pipeline().parameters.partitionValue, 1, 'DAY','yyyy-MM-dd'), '''')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SybaseDataset_STG_IDB_VW_DIM_ACCTS_ARCHIVE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "csv_STG_IDB_VW_DIM_ACCTS_ARCHIVE",
								"type": "DatasetReference",
								"parameters": {
									"partitionValue": {
										"value": "@replace(pipeline().parameters.partitionValue, '-', '')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"partitionValue": {
						"type": "string"
					}
				},
				"variables": {
					"Blob_File_Path_NPA_DATA": {
						"type": "String",
						"defaultValue": "NPA_DATA/STG.STG_IDB_VW_DIM_ACCTS_ARCHIVE/load_date="
					}
				},
				"folder": {
					"name": "stg2landingBrd2"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-22T07:37:36Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/stag2landing_Neft')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "STG-STG_NEFT_NEFT_INWARD_PAYMENT_TRANS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CHECK_PARTITION_EXISTS_NEFT_INWARD_PAYMENT_TRANS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SybaseSource",
								"query": {
									"value": "@concat('select \nNEFT.SEQ_NO,\nNEFT.A4_2020 AS TRANSACTION_REF,\nNEFT.A4_2006 AS RELATED_REFERENCE,\nNEFT.A4_5756 AS SENDER_IFSC,\nNEFT.A4_6305 AS SENDER_AC_TYPE,\nNEFT.A4_6021 AS SENDER_ACC_NO,\nNEFT.A4_6091 AS SENDER_NAME,\nNEFT.AMOUNT,\nNEFT.A4_3380 AS VALUE_DATE,\nNEFT.A4_3375 AS REMIT_DATE,\nNEFT.A4_HEADER_3535 AS BATCH_NUMBER,\nNEFT.A4_5569 AS BENEFICIARY_IFSC,\nNEFT.A4_6310 AS BENEFICIARY_AC_TYPE,\nNEFT.APAC AS BENEFICIARY_AC_NO,\nNEFT.A4_6081 AS BENEFICIARY_NAME,\nNEFT.A4_6346 AS RETURN_CODE,\nNEFT.A4_6366 AS RETURN_REASON,\nNEFT.A4_7002 AS ORIGINATOR_REMITTANCE,\nNEFT.A4_7495 AS SENDER_TO_RECEIVER_INFO,\nGAM.CIF_ID,\nGAM.SCHM_TYPE\nfrom STG.STG_NEFT_NEFT_INWARD_PAYMENT_TRANS NEFT\nINNER JOIN STG.STG_FINACLE_GAM  GAM\non NEFT.APAC = GAM.FORACID \nwhere \nGAM.SCHM_TYPE in (''CA'',''CCA'',''ODA'') and \nGAM.CIF_ID in \n(select distinct `BCIF_BANK Id` from STG.STG_GLEMS_MVIEW_FAC_DTLS where \n`Limit Suffix` in \n(''AJANT'',''ALKEM'',''BAIR'',''BANF'',''BC'',''BCCAP'',''BCCPX'',''BCCXP'',''BCD'',''BCL'',''BCLM'',''BCTL'',\n''BCWC'',''BG1'',''BG2'',''BG3'',''BG4'',''BGADH'',''BGBBD'',''BGFIN'',''BGLIM'',''BGPER'',''BGR2'',''BILLL'',\n''BLUEC'',''BUCR'',''BURCR'',''BUYCD'',''BUYCR'',''BUYER'',''BUYRC'',''BYCR'',''CADIL'',''CAPEX'',''CAPLC'',\n''CBDST'',''CC'',''CCOD'',''CHAN'',''CLNBI'',''CLNBL'',''CVVJK'',''DBAC1'',''DBAC2'',''DBAC5'',''DBDAC'',\n''DBDDW'',''DOMBD'',''DRWR'',''EBDMM'',''EBDTA'',''EBDTM'',''EBDTT'',''EBDVE'',''EPC'',''EPC1'',''EPC2'',\n''EPCCR'',''EPCFC'',''FACTO'',''FBD'',''FBN'',''FBP'',''FBP2'',''FBPAD'',''FDCLT'',''FLCIN'',''FRGNA'',\n''FRGNB'',''IDEA'',''ILCFL'',''IMCLR'',''IMSTR'',''INBAL'',''INDIS'',''INHHM'',''INMNM'',''INMUL'',\n''INOT1'',''INOT2'',''INOT3'',''INOT4'',''INOT6'',''INTAF'',''INTAS'',''INVAD'',''INVDF'',''INVDI'',\n''INVFI'',''INVO'',''INVPU'',''KCCL'',''LALOU'',''LC'',''LCBD'',''LCBDC'',''LCBDL'',''LCBDS'',''LCBL'',\n''LCCAP'',''LCCP1'',''LCCP2'',''LCCPX'',''LCFBL'',''LCIBL'',''LCIMP'',''LCIND'',''LCLIM'',''LCNPB'',\n''LCNSB'',''LCPBD'',''LCPXF'',''LCPXI'',''LCSBD'',''LCWC'',''LCWCF'',''LCWCI'',''LOTML'',''LOU'',''MEDLE'',\n''MICRO'',''MULDI'',''NICHO'',''OD'',''ODFD'',''ODHAN'',''PBD1'',''PBD2'',''PBUY1'',''PBUY2'',''PBUY3'',\n''PBUY4'',''PC'',''PCFC1'',''PCFC2'',''PCFCI'',''PCFCL'',''PCFCN'',''PCFCR'',''PCFCY'',''PCFRN'',''PCINR'',\n''PCLI'',''PCLIM'',''PCRUP'',''PCWC'',''PION'',''POBAL'',''POFUN'',''POHOS'',''POMNM'',''POMUL'',''POONA'',\n''POTML'',''PSC'',''PSCFC'',''PSCIN'',''PUR'',''PURC1'',''RECEV'',''RFACT'',''SBD1'',''SBD11'',''SBD2'',''SBD3'',\n''SBD4'',''SBD5'',''SBD6'',''SBDAL'',''SBDB'',''SBDCE'',''SBDGB'',''SBDMM'',''SBDS'',''SBDTM'',''SBLC'',''SBLCB'',\n''SBLCI'',''SBLCM'',''SBLCY'',''SIF'',''SPENG'',''STL'',''STLAD'',''STLCP'',''STLFC'',''STLL'',''STLLI'',''STLWD'',\n''SUNPH'',''SUPL'',''SUPP'',''TATA'',''TCD'',''TREDS'',''VAPIP'',''WCCLI'',''WCDL'',''WCDL2'',''WCDLA'',''WCDLD'',''WCDLM''))\nand\nA4_3380=''',replace(pipeline().parameters.partitionValue, '-', ''),'''')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"maxRowsPerFile": 300000,
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SybaseDataset_NeftRtgs",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "csv_NEFT",
								"type": "DatasetReference",
								"parameters": {
									"partitiondate": {
										"value": "@replace(pipeline().parameters.partitionValue, '-', '')",
										"type": "Expression"
									},
									"NeftTable": "NEFT_INWARD_PAYMENT",
									"loaddate": {
										"value": "@replace(pipeline().parameters.loadDate, '-', '')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "CHECK_PARTITION_EXISTS_NEFT_INWARD_PAYMENT_TRANS",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Check_Blob_Partition_Exists_Delete_Activity_Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"date2run": {
									"value": "@replace(pipeline().parameters.loadDate, '-', '')",
									"type": "Expression"
								},
								"date2runm1": {
									"value": "@replace(pipeline().parameters.partitionValue, '-', '')",
									"type": "Expression"
								},
								"Blob_File_path": {
									"value": "@variables('Blob_File_Path_NEFT_INWARD_PAYMENT_TRAN')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CHECK_PARTITION_EXISTS_NEFT_OUTWARD_PAYMENT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "STG-STG_NEFT_NEFT_INWARD_PAYMENT_TRANS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Check_Blob_Partition_Exists_Delete_Activity_Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"date2run": {
									"value": "@replace(pipeline().parameters.loadDate, '-', '')",
									"type": "Expression"
								},
								"date2runm1": {
									"value": "@replace(pipeline().parameters.partitionValue, '-', '')",
									"type": "Expression"
								},
								"Blob_File_path": {
									"value": "@variables('Blob_File_Path_NEFT_OUTWARD_PAYMENT')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "NEFT_OUTWARD_PAYMENT",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CHECK_PARTITION_EXISTS_NEFT_OUTWARD_PAYMENT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SybaseSource",
								"query": {
									"value": "@concat('select UTR, c.tran_id,\nDATEFORMAT(c.tran_date, ''yyyyMMdd'') AS tran_date,\ntran_amt,ORD_PARTY_ACCT,\nORD_PARTY_NAME, ORD_PARTY_ADDR1,\nORD_PARTY_ADDR2,ORD_PARTY_ADDR3,\nRECEIVER_BIC,BENEF_PARTY_ACCT,\nBENEF_PARTY_NAME, BENEF_PARTY_ADDR1,\nBENEF_PARTY_ADDR2,BENEF_PARTY_ADDR3\nfrom STG.STG_FINACLE_PORH a,\nSTG.STG_FINACLE_PORD b,\nSTG.STG_FINACLE_SMH c\nwhere a.pymt_ref_num =  b.pymt_ref_num\nand a.pymt_ref_num = ROUTING_REF_NUM\nand c.IN_OUT_IND = ''O''\nand PAYSYS_ID = ''NEFT''\nand DATEFORMAT(execution_date, ''yyyy-MM-dd'') = ''',pipeline().parameters.partitionValue,'''')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"maxRowsPerFile": 300000,
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SybaseDataset_NeftRtgs",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "csv_NEFT",
								"type": "DatasetReference",
								"parameters": {
									"partitiondate": {
										"value": "@replace(pipeline().parameters.partitionValue, '-', '')",
										"type": "Expression"
									},
									"NeftTable": "NEFT_OUTWARD_PAYMENT",
									"loaddate": {
										"value": "@replace(pipeline().parameters.loadDate, '-', '')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"partitionValue": {
						"type": "string",
						"defaultValue": "yyyy-mm-dd"
					},
					"loadDate": {
						"type": "string",
						"defaultValue": "yyyy-mm-dd"
					}
				},
				"variables": {
					"Blob_File_Path_NEFT_INWARD_PAYMENT_TRAN": {
						"type": "String",
						"defaultValue": "NEFT/NEFT_INWARD_PAYMENT/load_date="
					},
					"Blob_File_Path_NEFT_OUTWARD_PAYMENT": {
						"type": "String",
						"defaultValue": "NEFT/NEFT_OUTWARD_PAYMENT/load_date="
					}
				},
				"folder": {
					"name": "stg2landing_NeftRtgs"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-09T13:54:45Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/stag2landing_RP_INPUT_TABLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RP_INPUT_TABLE",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CHECK_BLOB_PARTITION_EXISTS_DELETE_AND_RECREATE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SybaseSource",
								"query": "select  * into #rp from (\nSELECT H.\"BCIF_BANK Id\" as BCIF_BANKID, \ncase when A.PARENT_CP_ID=B.CP_ID then B.COUNTERPARTY_NAME \nwhen A.PARENT_CP_ID=c.PARENT_CP_ID then c.COUNTERPARTY_NAME\nwhen D.PARENT_CP_ID=c.CP_ID then D.COUNTERPARTY_NAME\nwhen F.CP_ID=E.RELATED_COUNTERPARTY_ID then F.COUNTERPARTY_NAME\nwhen G.CP_ID=E.COUNTERPARTY_ID then G.COUNTERPARTY_NAME else 'others' end as RELATED_ENTITY_NAME, \ncase when A.PARENT_CP_ID=B.CP_ID then 'Group Entities' \nwhen A.PARENT_CP_ID=c.PARENT_CP_ID then 'Group Entities' \nwhen D.PARENT_CP_ID=c.CP_ID then 'Subsidiary'\nwhen F.CP_ID=E.RELATED_COUNTERPARTY_ID then 'Promoters'\nwhen G.CP_ID=E.COUNTERPARTY_ID then 'Directors' else 'others' end as RELATIONSHIP\nFROM STG.STG_GLEMS_MVIEW_CP_DTLS A \nLEFT JOIN STG.STG_GLEMS_MVIEW_CP_DTLS B ON A.PARENT_CP_ID=B.CP_ID\nLEFT JOIN STG.STG_GLEMS_MVIEW_CP_DTLS C ON A.PARENT_CP_ID=c.PARENT_CP_ID\nLEFT JOIN STG.STG_GLEMS_MVIEW_CP_DTLS D ON D.PARENT_CP_ID=c.CP_ID\nLEFT JOIN STG.STG_GLEMS_MVIEW_CP_RLTD_DTLS E ON E.COUNTERPARTY_ID=a.CP_ID\nLEFT JOIN STG.STG_GLEMS_MVIEW_CP_DTLS F ON F.CP_ID=E.RELATED_COUNTERPARTY_ID\nLEFT JOIN STG.STG_GLEMS_MVIEW_CP_DTLS G ON G.CP_ID=E.COUNTERPARTY_ID\nLEFT JOIN (select distinct \"BCIF_BANK Id\", \"CP ID\"  from STG.STG_GLEMS_MVIEW_FAC_DTLS) H on A.CP_ID = H.\"CP ID\"\n)a\n\nselect distinct * from #rp where RELATIONSHIP != 'others' and RELATED_ENTITY_NAME != 'others' and BCIF_BANKID != ''"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"maxRowsPerFile": 300000,
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SybaseDataset_RP_INPUT_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "csv_Derived_rpinput",
								"type": "DatasetReference",
								"parameters": {
									"date2run": {
										"value": "@pipeline().parameters.date2run",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "CHECK_BLOB_PARTITION_EXISTS_DELETE_AND_RECREATE",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Check_Blob_Load_date_wise_Delete_Activity_pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"date2run": {
									"value": "@pipeline().parameters.date2run",
									"type": "Expression"
								},
								"Blob_File_Path_Location": {
									"value": "@variables('Blob_File_Path_Location')",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"date2run": {
						"type": "string",
						"defaultValue": "yyyyMMdd"
					}
				},
				"variables": {
					"Blob_File_Path_Location": {
						"type": "String",
						"defaultValue": "DERIVED_DATASETS/RP_INPUT_TABLE/load_date="
					}
				},
				"folder": {
					"name": "stag2landing_deriveddatasets"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-11T12:58:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/stag2landing_RTGS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RTGS_INWARD_PAYMENT",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CHECK_PARTITION_EXISTS_RTGS_INWARD_PAYMENT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SybaseSource",
								"query": {
									"value": "@concat('select \nRTGS.MESSAGE_TYPE,\nRTGS.AMOUNT,\nRTGS.MSG_ID AS MESSAGE_IDENTIFIER,\nRTGS.UTR_NO AS TRANSACTION_ID,\nRTGS.END_TO_END_ID AS TRANSACTION_END_ID,\nRTGS.SENDER_ADDRESS AS DEBITOR_AGENT,\nRTGS.A4_5500 AS DEBITOR_ACCOUNT_AND_NAME,\nRTGS.A4_5516 AS DEBITOR_FININST_NAME,\nRTGS.RECEIVER_ADDRESS,\nRTGS.APAC AS CREDITOR_ACCOUNT,\nRTGS.A4_5561 AS CREDITOR_ACCOUNT_AND_NAME,\nRTGS.A4_6719 AS CREDITOR_FININST_NAME,\nRTGS.A4_7023 AS INSTITUTION_INFORMATION,\nRTGS.A4_7495 AS REMITTANCE_INFORMATION,\nreplace(RTGS.A4_4488_VALUE_DT, ''-'', '''') AS VALUE_DATE,\nRTGS.ORIGINATING_DATE AS SETTLEMENT_DATE,\nRTGS.ORIGINATING_TIME AS RECEIVED_TIME,\nGAM.CIF_ID,\nGAM.SCHM_TYPE\nfrom STG.STG_NEFT_RTGS_INWARD_PAYMENT_TRANS  RTGS\nINNER JOIN STG.STG_FINACLE_GAM  GAM\non RTGS.APAC = GAM.FORACID \nwhere \nGAM.SCHM_TYPE in (''CA'',''CCA'',''ODA'') and \nGAM.CIF_ID in \n(select distinct `BCIF_BANK Id` from STG.STG_GLEMS_MVIEW_FAC_DTLS where \n`Limit Suffix` in \n(''AJANT'',''ALKEM'',''BAIR'',''BANF'',''BC'',''BCCAP'',''BCCPX'',''BCCXP'',''BCD'',''BCL'',''BCLM'',''BCTL'',\n''BCWC'',''BG1'',''BG2'',''BG3'',''BG4'',''BGADH'',''BGBBD'',''BGFIN'',''BGLIM'',''BGPER'',''BGR2'',''BILLL'',\n''BLUEC'',''BUCR'',''BURCR'',''BUYCD'',''BUYCR'',''BUYER'',''BUYRC'',''BYCR'',''CADIL'',''CAPEX'',''CAPLC'',\n''CBDST'',''CC'',''CCOD'',''CHAN'',''CLNBI'',''CLNBL'',''CVVJK'',''DBAC1'',''DBAC2'',''DBAC5'',''DBDAC'',\n''DBDDW'',''DOMBD'',''DRWR'',''EBDMM'',''EBDTA'',''EBDTM'',''EBDTT'',''EBDVE'',''EPC'',''EPC1'',''EPC2'',\n''EPCCR'',''EPCFC'',''FACTO'',''FBD'',''FBN'',''FBP'',''FBP2'',''FBPAD'',''FDCLT'',''FLCIN'',''FRGNA'',\n''FRGNB'',''IDEA'',''ILCFL'',''IMCLR'',''IMSTR'',''INBAL'',''INDIS'',''INHHM'',''INMNM'',''INMUL'',\n''INOT1'',''INOT2'',''INOT3'',''INOT4'',''INOT6'',''INTAF'',''INTAS'',''INVAD'',''INVDF'',''INVDI'',\n''INVFI'',''INVO'',''INVPU'',''KCCL'',''LALOU'',''LC'',''LCBD'',''LCBDC'',''LCBDL'',''LCBDS'',''LCBL'',\n''LCCAP'',''LCCP1'',''LCCP2'',''LCCPX'',''LCFBL'',''LCIBL'',''LCIMP'',''LCIND'',''LCLIM'',''LCNPB'',\n''LCNSB'',''LCPBD'',''LCPXF'',''LCPXI'',''LCSBD'',''LCWC'',''LCWCF'',''LCWCI'',''LOTML'',''LOU'',''MEDLE'',\n''MICRO'',''MULDI'',''NICHO'',''OD'',''ODFD'',''ODHAN'',''PBD1'',''PBD2'',''PBUY1'',''PBUY2'',''PBUY3'',\n''PBUY4'',''PC'',''PCFC1'',''PCFC2'',''PCFCI'',''PCFCL'',''PCFCN'',''PCFCR'',''PCFCY'',''PCFRN'',''PCINR'',\n''PCLI'',''PCLIM'',''PCRUP'',''PCWC'',''PION'',''POBAL'',''POFUN'',''POHOS'',''POMNM'',''POMUL'',''POONA'',\n''POTML'',''PSC'',''PSCFC'',''PSCIN'',''PUR'',''PURC1'',''RECEV'',''RFACT'',''SBD1'',''SBD11'',''SBD2'',''SBD3'',\n''SBD4'',''SBD5'',''SBD6'',''SBDAL'',''SBDB'',''SBDCE'',''SBDGB'',''SBDMM'',''SBDS'',''SBDTM'',''SBLC'',''SBLCB'',\n''SBLCI'',''SBLCM'',''SBLCY'',''SIF'',''SPENG'',''STL'',''STLAD'',''STLCP'',''STLFC'',''STLL'',''STLLI'',''STLWD'',\n''SUNPH'',''SUPL'',''SUPP'',''TATA'',''TCD'',''TREDS'',''VAPIP'',''WCCLI'',''WCDL'',''WCDL2'',''WCDLA'',''WCDLD'',''WCDLM''))\nand DATE(TXN_DATE)=''',pipeline().parameters.partitionValue,'''')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"maxRowsPerFile": 300000,
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SybaseDataset_NeftRtgs",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "csv_RTGS",
								"type": "DatasetReference",
								"parameters": {
									"partitiondate": {
										"value": "@replace(pipeline().parameters.partitionValue, '-', '')",
										"type": "Expression"
									},
									"RtgsTable": "RTGS_INWARD_PAYMENT",
									"loaddate": {
										"value": "@replace(pipeline().parameters.loadDate, '-', '')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "CHECK_PARTITION_EXISTS_RTGS_INWARD_PAYMENT",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Check_Blob_Partition_Exists_Delete_Activity_Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"date2run": {
									"value": "@replace(pipeline().parameters.loadDate, '-', '')",
									"type": "Expression"
								},
								"date2runm1": {
									"value": "@replace(pipeline().parameters.partitionValue, '-', '')",
									"type": "Expression"
								},
								"Blob_File_path": {
									"value": "@variables('Blob_File_Path_RTGS_INWARD_PAYMENT')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CHECK_LOAD_DATE_EXISTS_RTGS_OUTWARD_PAYMENT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RTGS_INWARD_PAYMENT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Check_Blob_Partition_Exists_Delete_Activity_Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"date2run": {
									"value": "@replace(pipeline().parameters.loadDate, '-', '')",
									"type": "Expression"
								},
								"date2runm1": {
									"value": "@replace(pipeline().parameters.partitionValue, '-', '')",
									"type": "Expression"
								},
								"Blob_File_path": {
									"value": "@variables('Blob_File_Path_RTGS_OUTWARD_PAYMENT')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "RTGS_OUTWARD_PAYMENT",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CHECK_LOAD_DATE_EXISTS_RTGS_OUTWARD_PAYMENT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SybaseSource",
								"query": {
									"value": "@concat('select UTR, c.tran_id,\nDATEFORMAT(c.tran_date, ''yyyyMMdd'') AS tran_date,\ntran_amt,ORD_PARTY_ACCT,\nORD_PARTY_NAME, ORD_PARTY_ADDR1,\nORD_PARTY_ADDR2,ORD_PARTY_ADDR3,\nRECEIVER_BIC,BENEF_PARTY_ACCT,\nBENEF_PARTY_NAME, BENEF_PARTY_ADDR1,\nBENEF_PARTY_ADDR2,BENEF_PARTY_ADDR3\nfrom STG.STG_FINACLE_PORH a,\nSTG.STG_FINACLE_PORD b,\nSTG.STG_FINACLE_SMH c\nwhere a.pymt_ref_num =  b.pymt_ref_num\nand a.pymt_ref_num = ROUTING_REF_NUM\nand c.IN_OUT_IND = ''O''\nand PAYSYS_ID = ''RTGS''\nand DATEFORMAT(execution_date, ''yyyy-MM-dd'') = ''',pipeline().parameters.partitionValue,'''')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"maxRowsPerFile": 300000,
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SybaseDataset_NeftRtgs",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "csv_RTGS",
								"type": "DatasetReference",
								"parameters": {
									"partitiondate": {
										"value": "@replace(pipeline().parameters.partitionValue, '-', '')",
										"type": "Expression"
									},
									"RtgsTable": "RTGS_OUTWARD_PAYMENT",
									"loaddate": {
										"value": "@replace(pipeline().parameters.loadDate, '-', '')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"partitionValue": {
						"type": "string",
						"defaultValue": "yyyy-mm-dd"
					},
					"loadDate": {
						"type": "string",
						"defaultValue": "yyyy-mm-dd"
					}
				},
				"variables": {
					"Blob_File_Path_RTGS_INWARD_PAYMENT": {
						"type": "String",
						"defaultValue": "RTGS/RTGS_INWARD_PAYMENT/load_date="
					},
					"Blob_File_Path_RTGS_OUTWARD_PAYMENT": {
						"type": "String",
						"defaultValue": "RTGS/RTGS_OUTWARD_PAYMENT/load_date="
					}
				},
				"folder": {
					"name": "stg2landing_NeftRtgs"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-09T13:54:45Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/testTrigger1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "test-trigger",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "testTrigger1",
							"body": {
								"division": "consumer"
							},
							"headers": {},
							"method": "POST"
						},
						"linkedServiceName": {
							"referenceName": "ufce_prod_fa",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "DEV/Alerts-UFCE"
				},
				"annotations": [],
				"lastPublishTime": "2025-05-06T12:00:49Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzurePostgreSql_public_get_ufce_master_for_download')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzurePostgreSql_ufce",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [
					{
						"name": "workflow_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "crn",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "lob",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "segment",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "year",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "quarter",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "yq",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "cp_id",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "borrower_name",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "division",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "location",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "region",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "zone",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "credit_analyst",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "rm",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "applicability_status",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "reason_not_appli",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "certificate_type",
						"type": "USER-DEFINED",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "self_cert_expected",
						"type": "boolean",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "domestic_cert_expected",
						"type": "boolean",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "auditor_cert_expected",
						"type": "boolean",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "auditor_cert_due_date",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ebid",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ebid_type",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "total_fb_os_rel_provision",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "pan_india_os",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "total_fb_os",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "total_non_fb_os",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "data_status",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "currency",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "fx_payables_os",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "fx_loan_os",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "fx_receivables_os",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "hed_amt_pay_loan_liab",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "hed_amt_receivables",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "net_fce_sl_pos",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "net_ufce_sl_pos",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ratio_net_unhed",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "likely_loss",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ebid_considered",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ebid_source",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ratio_ll_ebid_con",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "risk_category",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ufce_source",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "remarks",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "is_kmbl_lead_bk",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "is_limit_with_bk_sys",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ufce_maturing_5yr",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "provision_applicable",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "provision_indicator",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "provision_amount",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "crilic_exp",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "glems_exp",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "kmbl_sys_fund_os",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "kmbl_sys_nonfund_os",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "final_os_for_prov",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "cms",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "mtm_os",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "bullion_os",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "lcbd",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sblc",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "odfd",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "gift_city",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "asm",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tsm",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "acm",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "is_cases_checked",
						"type": "boolean",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "final_provision_perct",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "final_provision_amt",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "status",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "assigned_to",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "comment",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "auditor_cert_period",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "approach",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "nature_of_business",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "approach_change_approval",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ebid_date",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "auditor_cert_received",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "state",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "final_bk_sys_limit_gr25",
						"type": "boolean",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "assigned_on",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "provision_applicable_self_cert",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "provision_applicable_bk_limit_rate",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "borrower_email",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "penalty_bucket",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "penalty_amount",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "balance_sheet_disclosure_expected",
						"type": "boolean",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "total_penalty",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "difference",
						"type": "double precision",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "srm",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "cm",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "bh",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "extra-column-1",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "extra-column-2",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "extra-column-3",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ciib_comments",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ca_comments",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "cmt_comments",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "is_deleted",
						"type": "boolean",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "cmt_checker_comments",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "createdAt",
						"type": "timestamp with time zone",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "updatedAt",
						"type": "timestamp with time zone",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "public",
					"table": "ufce_master"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adls_ufce_audit')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_ufce",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string",
						"defaultValue": "ufce-audit"
					},
					"division": {
						"type": "string"
					},
					"year": {
						"type": "string"
					},
					"quarter": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat(dataset().division, '/', dataset().year, '_', dataset().quarter)",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adls_ufce_dwh')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_ufce",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string",
						"defaultValue": "ufce-dwh"
					},
					"division": {
						"type": "string"
					},
					"year": {
						"type": "string"
					},
					"quarter": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat(dataset().division, '/', dataset().year, '_', dataset().quarter)",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ufce_download')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_ufce",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string",
						"defaultValue": "ufce-download"
					},
					"division": {
						"type": "string"
					},
					"year": {
						"type": "string"
					},
					"quarter": {
						"type": "string"
					},
					"file_created_time": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat(dataset().division, '/', dataset().year, '_', dataset().quarter, '/download_date=', dataset().file_created_time)",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ufce_download_intermediate')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_ufce",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string",
						"defaultValue": "ufce-download-intermediate"
					},
					"division": {
						"type": "string"
					},
					"year": {
						"type": "string"
					},
					"quarter": {
						"type": "string"
					},
					"file_created_time": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().division, '_', dataset().year, '_', dataset().quarter, '_', dataset().file_created_time, '.txt')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(dataset().division, '/', dataset().year, '_', dataset().quarter, '/download_date=', dataset().file_created_time)",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ufce_to_get_download_file_path')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_ufce",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string",
						"defaultValue": "ufce-download"
					},
					"division": {
						"type": "string"
					},
					"year": {
						"type": "string"
					},
					"quarter": {
						"type": "string"
					},
					"file_created_time": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat(dataset().division, '/', dataset().year, '_', dataset().quarter, '/download_date=', dataset().file_created_time)",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CheckBrd2EntityStore')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Brd2Uc6SatisfiedTriggerInfo",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CheckEntityStorePartitionDateExistSynapseLoad",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"partitionDate": {
									"value": "@pipeline().parameters.partitionDate",
									"type": "Expression"
								},
								"jobSubjectArea": "brd2_uc6_satisfied_trigger_info",
								"schema": {
									"value": "@pipeline().parameters.schema",
									"type": "Expression"
								},
								"container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SharePrice",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CheckEntityStorePartitionDateExistSynapseLoad",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"partitionDate": {
									"value": "@pipeline().parameters.partitionDate",
									"type": "Expression"
								},
								"jobSubjectArea": "share_price_data",
								"schema": {
									"value": "@pipeline().parameters.schema",
									"type": "Expression"
								},
								"container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "NpaData",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CheckEntityStorePartitionDateExistSynapseLoad",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"partitionDate": {
									"value": "@pipeline().parameters.partitionDate",
									"type": "Expression"
								},
								"jobSubjectArea": "npa_data",
								"schema": {
									"value": "@pipeline().parameters.schema",
									"type": "Expression"
								},
								"container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "LcBgUnion",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CheckEntityStorePartitionDateExistSynapseLoad",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"partitionDate": {
									"value": "@pipeline().parameters.partitionDate",
									"type": "Expression"
								},
								"jobSubjectArea": "lc_bg_union",
								"schema": {
									"value": "@pipeline().parameters.schema",
									"type": "Expression"
								},
								"container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"partitionDate": {
						"type": "string"
					},
					"container": {
						"type": "string"
					},
					"schema": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PROD/CadenzFlow/BRD2"
				},
				"annotations": [],
				"lastPublishTime": "2022-11-11T10:32:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CheckBrd3EntityStore')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ChangeInDirector",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CheckEntityStorePartitionDateExistSynapseLoad",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"partitionDate": {
									"value": "@pipeline().parameters.partitionDate",
									"type": "Expression"
								},
								"jobSubjectArea": "change_in_director",
								"schema": {
									"value": "@pipeline().parameters.schema",
									"type": "Expression"
								},
								"container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "AssociateCompanies",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CheckEntityStorePartitionDateExistSynapseLoad",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"partitionDate": {
									"value": "@pipeline().parameters.partitionDate",
									"type": "Expression"
								},
								"jobSubjectArea": "associate_companies",
								"schema": {
									"value": "@pipeline().parameters.schema",
									"type": "Expression"
								},
								"container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ChangeInAuditor",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CheckEntityStorePartitionDateExistSynapseLoad",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"partitionDate": {
									"value": "@pipeline().parameters.partitionDate",
									"type": "Expression"
								},
								"jobSubjectArea": "change_in_auditor",
								"schema": {
									"value": "@pipeline().parameters.schema",
									"type": "Expression"
								},
								"container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "RaidByOfficials",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CheckEntityStorePartitionDateExistSynapseLoad",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"partitionDate": {
									"value": "@pipeline().parameters.partitionDate",
									"type": "Expression"
								},
								"jobSubjectArea": "raid_by_officials",
								"schema": {
									"value": "@pipeline().parameters.schema",
									"type": "Expression"
								},
								"container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "PromoterHoldingOutputTable",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CheckEntityStorePartitionDateExistSynapseLoad",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"partitionDate": {
									"value": "@pipeline().parameters.partitionDate",
									"type": "Expression"
								},
								"jobSubjectArea": "promoter_holding_output_table",
								"schema": {
									"value": "@pipeline().parameters.schema",
									"type": "Expression"
								},
								"container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "PromoterPledgeOutputTable",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CheckEntityStorePartitionDateExistSynapseLoad",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"partitionDate": {
									"value": "@pipeline().parameters.partitionDate",
									"type": "Expression"
								},
								"jobSubjectArea": "promoter_pledge_output_table",
								"schema": {
									"value": "@pipeline().parameters.schema",
									"type": "Expression"
								},
								"container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "PromoterHoldingOrPledgeShare",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CheckEntityStorePartitionDateExistSynapseLoad",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"partitionDate": {
									"value": "@pipeline().parameters.partitionDate",
									"type": "Expression"
								},
								"jobSubjectArea": "promoter_holding_or_pledge_share",
								"schema": {
									"value": "@pipeline().parameters.schema",
									"type": "Expression"
								},
								"container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "AgingReceivablesTable",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CheckEntityStorePartitionDateExistSynapseLoad",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"partitionDate": {
									"value": "@pipeline().parameters.partitionDate",
									"type": "Expression"
								},
								"jobSubjectArea": "aging_receivables_table",
								"schema": {
									"value": "@pipeline().parameters.schema",
									"type": "Expression"
								},
								"container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ReceivablesTurnoverRatio",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CheckEntityStorePartitionDateExistSynapseLoad",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"partitionDate": {
									"value": "@pipeline().parameters.partitionDate",
									"type": "Expression"
								},
								"jobSubjectArea": "receivables_turnover_ratio",
								"schema": {
									"value": "@pipeline().parameters.schema",
									"type": "Expression"
								},
								"container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "InventoryTurnoverRatio",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CheckEntityStorePartitionDateExistSynapseLoad",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"partitionDate": {
									"value": "@pipeline().parameters.partitionDate",
									"type": "Expression"
								},
								"jobSubjectArea": "inventory_turnover_ratio",
								"schema": {
									"value": "@pipeline().parameters.schema",
									"type": "Expression"
								},
								"container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CashEquivalentBorrowingConsumer",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CheckEntityStorePartitionDateExistSynapseLoad",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"partitionDate": {
									"value": "@pipeline().parameters.partitionDate",
									"type": "Expression"
								},
								"jobSubjectArea": "cash_equivalent_borrowing_consumer",
								"schema": {
									"value": "@pipeline().parameters.schema",
									"type": "Expression"
								},
								"container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CashEquivalentBorrowingWBG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CheckEntityStorePartitionDateExistSynapseLoad",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"partitionDate": {
									"value": "@pipeline().parameters.partitionDate",
									"type": "Expression"
								},
								"jobSubjectArea": "cash_equivalent_borrowing_wbg",
								"schema": {
									"value": "@pipeline().parameters.schema",
									"type": "Expression"
								},
								"container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CurrentAssetsTurnoverConsumer",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CheckEntityStorePartitionDateExistSynapseLoad",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"partitionDate": {
									"value": "@pipeline().parameters.partitionDate",
									"type": "Expression"
								},
								"jobSubjectArea": "current_assets_turnover_consumer",
								"schema": {
									"value": "@pipeline().parameters.schema",
									"type": "Expression"
								},
								"container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CurrentAssetsTurnoverWBG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CheckEntityStorePartitionDateExistSynapseLoad",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"partitionDate": {
									"value": "@pipeline().parameters.partitionDate",
									"type": "Expression"
								},
								"jobSubjectArea": "current_assets_turnover_wbg",
								"schema": {
									"value": "@pipeline().parameters.schema",
									"type": "Expression"
								},
								"container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "WorkingCapitalBorrowingConsumer",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CheckEntityStorePartitionDateExistSynapseLoad",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"partitionDate": {
									"value": "@pipeline().parameters.partitionDate",
									"type": "Expression"
								},
								"jobSubjectArea": "working_capital_borrowing_consumer",
								"schema": {
									"value": "@pipeline().parameters.schema",
									"type": "Expression"
								},
								"container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "WorkingCapitalBorrowingWBG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CheckEntityStorePartitionDateExistSynapseLoad",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"partitionDate": {
									"value": "@pipeline().parameters.partitionDate",
									"type": "Expression"
								},
								"jobSubjectArea": "working_capital_borrowing_wbg",
								"schema": {
									"value": "@pipeline().parameters.schema",
									"type": "Expression"
								},
								"container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"partitionDate": {
						"type": "string"
					},
					"container": {
						"type": "string"
					},
					"schema": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PROD/CadenzFlow/BRD3"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-21T06:12:22Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CheckEwsProfilePartitionDateExist')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "check_partion_date_exists",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "adls_profile_store",
								"type": "DatasetReference",
								"parameters": {
									"partitionValue": {
										"value": "@pipeline().parameters.partitionDate",
										"type": "Expression"
									},
									"subjectArea": {
										"value": "@pipeline().parameters.jobSubjectArea",
										"type": "Expression"
									},
									"container": {
										"value": "@pipeline().parameters.container",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "ParquetReadSettings"
							}
						}
					},
					{
						"name": "IF_Partition_Date_Exist_Return_True_or_False",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "check_partion_date_exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "partitionDateExists",
							"value": {
								"value": "@activity('check_partion_date_exists').output.exists",
								"type": "Expression"
							}
						}
					},
					{
						"name": "if_partition_date_exists_load_synapse",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "IF_Partition_Date_Exist_Return_True_or_False",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@variables('partitionDateExists')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteOpenTriggers",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "OpenTriggers",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"partitionValue": {
												"value": "@pipeline().parameters.partitionDate",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"partitionDate": {
						"type": "string",
						"defaultValue": "yyyy-MM-dd"
					},
					"jobSubjectArea": {
						"type": "string"
					},
					"container": {
						"type": "string"
					}
				},
				"variables": {
					"partitionDateExists": {
						"type": "Boolean"
					},
					"partitionDateNotFound": {
						"type": "String"
					}
				},
				"folder": {
					"name": "PROD/alert_workflow"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-12T07:10:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExecuteNeftRtgs')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute NEFT",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "stag2landing_Neft",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"partitionValue": {
									"value": "@pipeline().parameters.partitionValue",
									"type": "Expression"
								},
								"loadDate": {
									"value": "@pipeline().parameters.loadDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute RTGS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute NEFT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "stag2landing_RTGS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"partitionValue": {
									"value": "@pipeline().parameters.partitionValue",
									"type": "Expression"
								},
								"loadDate": {
									"value": "@pipeline().parameters.loadDate",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"partitionValue": {
						"type": "string"
					},
					"loadDate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "stg2landing_NeftRtgs"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T08:31:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/stag2landing_Neft')]",
				"[concat(variables('factoryId'), '/pipelines/stag2landing_RTGS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessingAndPopulating')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetConfig",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "conditional_processing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:01:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "GetConfigs",
							"headers": {
								"config_tables": {
									"value": "@pipeline().parameters.cosmosConfigTables",
									"type": "Expression"
								},
								"job_name": {
									"value": "@pipeline().parameters.jobSubjectArea",
									"type": "Expression"
								},
								"job_type": {
									"value": "@pipeline().parameters.jobExecutionType",
									"type": "Expression"
								},
								"database_name": {
									"value": "@pipeline().parameters.cosmosDatabaseName",
									"type": "Expression"
								}
							},
							"method": "GET"
						},
						"linkedServiceName": {
							"referenceName": "ewscadenceLS",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "set_cosmos_trigger_flag",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetConfig",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "cosmosTriggerFlag",
							"value": {
								"value": "@{json(activity('GetConfig').output.config).job_run_details.cosmosTriggerFlag}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "cosmos_consumption_trigger",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "set_cosmos_trigger_flag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('cosmosTriggerFlag'),'true')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "consumption_population",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CosmosDBConsumptionLayerProcessing",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"partitionValue": {
												"value": "@pipeline().parameters.partitionValue",
												"type": "Expression"
											},
											"markerRootPath": {
												"value": "@pipeline().parameters.markerRootPath",
												"type": "Expression"
											},
											"jobSubjectArea": {
												"value": "@pipeline().parameters.jobSubjectArea",
												"type": "Expression"
											},
											"cosmosDatabaseName": {
												"value": "@pipeline().parameters.cosmosDatabaseName",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "conditional_processing",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.jobExecutionType",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "entity",
									"activities": [
										{
											"name": "entity_processing",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "EntityProcessing",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"jobExecutionType": {
														"value": "@pipeline().parameters.jobExecutionType",
														"type": "Expression"
													},
													"partitionValue": {
														"value": "@pipeline().parameters.partitionValue",
														"type": "Expression"
													},
													"markerRootPath": {
														"value": "@pipeline().parameters.markerRootPath",
														"type": "Expression"
													},
													"jobSubjectArea": {
														"value": "@pipeline().parameters.jobSubjectArea",
														"type": "Expression"
													},
													"cosmosDatabaseName": {
														"value": "@pipeline().parameters.cosmosDatabaseName",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "derived_entity",
									"activities": [
										{
											"name": "derived_entity_processing",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "EntityProcessing",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"jobExecutionType": {
														"value": "@pipeline().parameters.jobExecutionType",
														"type": "Expression"
													},
													"partitionValue": {
														"value": "@pipeline().parameters.partitionValue",
														"type": "Expression"
													},
													"markerRootPath": {
														"value": "@pipeline().parameters.markerRootPath",
														"type": "Expression"
													},
													"jobSubjectArea": {
														"value": "@pipeline().parameters.jobSubjectArea",
														"type": "Expression"
													},
													"cosmosDatabaseName": {
														"value": "@pipeline().parameters.cosmosDatabaseName",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "profile",
									"activities": [
										{
											"name": "profile_processing",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "ProfileProcessing",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"jobExecutionType": {
														"value": "@pipeline().parameters.jobExecutionType",
														"type": "Expression"
													},
													"partitionValue": {
														"value": "@pipeline().parameters.partitionValue",
														"type": "Expression"
													},
													"markerRootPath": {
														"value": "@pipeline().parameters.markerRootPath",
														"type": "Expression"
													},
													"jobSubjectArea": {
														"value": "@pipeline().parameters.jobSubjectArea",
														"type": "Expression"
													},
													"cosmosDatabaseName": {
														"value": "@pipeline().parameters.cosmosDatabaseName",
														"type": "Expression"
													}
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "set_synapse_trigger_flag",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetConfig",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "synapseTriggerFlag",
							"value": {
								"value": "@{json(activity('GetConfig').output.config).job_run_details.synapseTriggerFlag}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "synapse_consumption_trigger",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "set_synapse_trigger_flag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('synapseTriggerFlag'),'true')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "check_profile_entity_cosumption",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SynapseConditionProfileEntity",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"jobExecutionType": {
												"value": "@pipeline().parameters.jobExecutionType",
												"type": "Expression"
											},
											"partitionValue": {
												"value": "@pipeline().parameters.partitionValue",
												"type": "Expression"
											},
											"jobSubjectArea": {
												"value": "@pipeline().parameters.jobSubjectArea",
												"type": "Expression"
											},
											"markerRootPath": {
												"value": "@pipeline().parameters.markerRootPath",
												"type": "Expression"
											},
											"schema": {
												"value": "@pipeline().parameters.schema",
												"type": "Expression"
											},
											"container": {
												"value": "@pipeline().parameters.container",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"partitionValue": {
						"type": "string",
						"defaultValue": "2021-04-12"
					},
					"jobExecutionType": {
						"type": "string",
						"defaultValue": "profile"
					},
					"jobSubjectArea": {
						"type": "string",
						"defaultValue": "ews"
					},
					"cosmosConfigTables": {
						"type": "string",
						"defaultValue": "job_run_details"
					},
					"cosmosDatabaseName": {
						"type": "string",
						"defaultValue": "config_store"
					},
					"markerRootPath": {
						"type": "string",
						"defaultValue": "job-metadata/markers"
					},
					"schema": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"container": {
						"type": "string",
						"defaultValue": "job-data"
					}
				},
				"variables": {
					"cosmosTriggerFlag": {
						"type": "String",
						"defaultValue": "false"
					},
					"synapseTriggerFlag": {
						"type": "String",
						"defaultValue": "false"
					}
				},
				"folder": {
					"name": "PROD/CadenzFlow"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-02T09:26:28Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataLoadDateCheckBrd2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SourceLoadDateCheckBrd2",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(startOfMonth(pipeline().parameters.partitionValue,'yyyy-MM-dd'),pipeline().parameters.partitionValue)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteInwardChequeReturns",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "stag2landing_INWARD_CHEQUE_RETURN_REPORT",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"partitionValue": {
												"value": "@pipeline().parameters.partitionValue",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"partitionValue": {
						"type": "string"
					}
				},
				"folder": {
					"name": "stg2landingBrd2"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-05T12:08:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataLoadMonthlyConsumerBl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SourceLoadDateCheckConsumerBl",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(startOfMonth(pipeline().parameters.partitionValue,'yyyy-MM-dd'),pipeline().parameters.partitionValue)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteConsumerBl",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "stag2landing_LOS_BL_CONSUMER",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"date2run": {
												"value": "@replace(pipeline().parameters.partitionValue,'-','')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"partitionValue": {
						"type": "string"
					}
				},
				"folder": {
					"name": "stag2landing_deriveddatasets"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-23T07:05:48Z"
			},
			"dependsOn": []
		}
	]
}