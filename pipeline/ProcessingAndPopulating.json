{
    "name": "ProcessingAndPopulating",
    "properties": {
        "activities": [
            {
                "name": "GetConfig",
                "type": "AzureFunctionActivity",
                "dependsOn": [
                    {
                        "activity": "conditional_processing",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.00:01:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "functionName": "GetConfigs",
                    "headers": {
                        "config_tables": {
                            "value": "@pipeline().parameters.cosmosConfigTables",
                            "type": "Expression"
                        },
                        "job_name": {
                            "value": "@pipeline().parameters.jobSubjectArea",
                            "type": "Expression"
                        },
                        "job_type": {
                            "value": "@pipeline().parameters.jobExecutionType",
                            "type": "Expression"
                        },
                        "database_name": {
                            "value": "@pipeline().parameters.cosmosDatabaseName",
                            "type": "Expression"
                        }
                    },
                    "method": "GET"
                },
                "linkedServiceName": {
                    "referenceName": "ewscadenceLS",
                    "type": "LinkedServiceReference"
                }
            },
            {
                "name": "set_cosmos_trigger_flag",
                "type": "SetVariable",
                "dependsOn": [
                    {
                        "activity": "GetConfig",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "variableName": "cosmosTriggerFlag",
                    "value": {
                        "value": "@{json(activity('GetConfig').output.config).job_run_details.cosmosTriggerFlag}",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "cosmos_consumption_trigger",
                "type": "IfCondition",
                "dependsOn": [
                    {
                        "activity": "set_cosmos_trigger_flag",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "expression": {
                        "value": "@equals(variables('cosmosTriggerFlag'),'true')",
                        "type": "Expression"
                    },
                    "ifTrueActivities": [
                        {
                            "name": "consumption_population",
                            "type": "ExecutePipeline",
                            "dependsOn": [],
                            "policy": {
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "pipeline": {
                                    "referenceName": "CosmosDBConsumptionLayerProcessing",
                                    "type": "PipelineReference"
                                },
                                "waitOnCompletion": true,
                                "parameters": {
                                    "partitionValue": {
                                        "value": "@pipeline().parameters.partitionValue",
                                        "type": "Expression"
                                    },
                                    "markerRootPath": {
                                        "value": "@pipeline().parameters.markerRootPath",
                                        "type": "Expression"
                                    },
                                    "jobSubjectArea": {
                                        "value": "@pipeline().parameters.jobSubjectArea",
                                        "type": "Expression"
                                    },
                                    "cosmosDatabaseName": {
                                        "value": "@pipeline().parameters.cosmosDatabaseName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    ]
                }
            },
            {
                "name": "conditional_processing",
                "type": "Switch",
                "dependsOn": [],
                "userProperties": [],
                "typeProperties": {
                    "on": {
                        "value": "@pipeline().parameters.jobExecutionType",
                        "type": "Expression"
                    },
                    "cases": [
                        {
                            "value": "entity",
                            "activities": [
                                {
                                    "name": "entity_processing",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "EntityProcessing",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "jobExecutionType": {
                                                "value": "@pipeline().parameters.jobExecutionType",
                                                "type": "Expression"
                                            },
                                            "partitionValue": {
                                                "value": "@pipeline().parameters.partitionValue",
                                                "type": "Expression"
                                            },
                                            "markerRootPath": {
                                                "value": "@pipeline().parameters.markerRootPath",
                                                "type": "Expression"
                                            },
                                            "jobSubjectArea": {
                                                "value": "@pipeline().parameters.jobSubjectArea",
                                                "type": "Expression"
                                            },
                                            "cosmosDatabaseName": {
                                                "value": "@pipeline().parameters.cosmosDatabaseName",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "value": "derived_entity",
                            "activities": [
                                {
                                    "name": "derived_entity_processing",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "EntityProcessing",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "jobExecutionType": {
                                                "value": "@pipeline().parameters.jobExecutionType",
                                                "type": "Expression"
                                            },
                                            "partitionValue": {
                                                "value": "@pipeline().parameters.partitionValue",
                                                "type": "Expression"
                                            },
                                            "markerRootPath": {
                                                "value": "@pipeline().parameters.markerRootPath",
                                                "type": "Expression"
                                            },
                                            "jobSubjectArea": {
                                                "value": "@pipeline().parameters.jobSubjectArea",
                                                "type": "Expression"
                                            },
                                            "cosmosDatabaseName": {
                                                "value": "@pipeline().parameters.cosmosDatabaseName",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "value": "profile",
                            "activities": [
                                {
                                    "name": "profile_processing",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "ProfileProcessing",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "jobExecutionType": {
                                                "value": "@pipeline().parameters.jobExecutionType",
                                                "type": "Expression"
                                            },
                                            "partitionValue": {
                                                "value": "@pipeline().parameters.partitionValue",
                                                "type": "Expression"
                                            },
                                            "markerRootPath": {
                                                "value": "@pipeline().parameters.markerRootPath",
                                                "type": "Expression"
                                            },
                                            "jobSubjectArea": {
                                                "value": "@pipeline().parameters.jobSubjectArea",
                                                "type": "Expression"
                                            },
                                            "cosmosDatabaseName": {
                                                "value": "@pipeline().parameters.cosmosDatabaseName",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "set_synapse_trigger_flag",
                "type": "SetVariable",
                "dependsOn": [
                    {
                        "activity": "GetConfig",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "variableName": "synapseTriggerFlag",
                    "value": {
                        "value": "@{json(activity('GetConfig').output.config).job_run_details.synapseTriggerFlag}",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "synapse_consumption_trigger",
                "type": "IfCondition",
                "dependsOn": [
                    {
                        "activity": "set_synapse_trigger_flag",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "expression": {
                        "value": "@equals(variables('synapseTriggerFlag'),'true')",
                        "type": "Expression"
                    },
                    "ifTrueActivities": [
                        {
                            "name": "check_profile_entity_cosumption",
                            "type": "ExecutePipeline",
                            "dependsOn": [],
                            "policy": {
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "pipeline": {
                                    "referenceName": "SynapseConditionProfileEntity",
                                    "type": "PipelineReference"
                                },
                                "waitOnCompletion": true,
                                "parameters": {
                                    "jobExecutionType": {
                                        "value": "@pipeline().parameters.jobExecutionType",
                                        "type": "Expression"
                                    },
                                    "partitionValue": {
                                        "value": "@pipeline().parameters.partitionValue",
                                        "type": "Expression"
                                    },
                                    "jobSubjectArea": {
                                        "value": "@pipeline().parameters.jobSubjectArea",
                                        "type": "Expression"
                                    },
                                    "markerRootPath": {
                                        "value": "@pipeline().parameters.markerRootPath",
                                        "type": "Expression"
                                    },
                                    "schema": {
                                        "value": "@pipeline().parameters.schema",
                                        "type": "Expression"
                                    },
                                    "container": {
                                        "value": "@pipeline().parameters.container",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "partitionValue": {
                "type": "string",
                "defaultValue": "2021-04-12"
            },
            "jobExecutionType": {
                "type": "string",
                "defaultValue": "profile"
            },
            "jobSubjectArea": {
                "type": "string",
                "defaultValue": "ews"
            },
            "cosmosConfigTables": {
                "type": "string",
                "defaultValue": "job_run_details"
            },
            "cosmosDatabaseName": {
                "type": "string",
                "defaultValue": "config_store"
            },
            "markerRootPath": {
                "type": "string",
                "defaultValue": "job-metadata/markers"
            },
            "schema": {
                "type": "string",
                "defaultValue": "dbo"
            },
            "container": {
                "type": "string",
                "defaultValue": "job-data"
            }
        },
        "variables": {
            "cosmosTriggerFlag": {
                "type": "String",
                "defaultValue": "false"
            },
            "synapseTriggerFlag": {
                "type": "String",
                "defaultValue": "false"
            }
        },
        "folder": {
            "name": "PROD/CadenzFlow"
        },
        "annotations": [],
        "lastPublishTime": "2024-10-02T09:26:28Z"
    },
    "type": "Microsoft.DataFactory/factories/pipelines"
}